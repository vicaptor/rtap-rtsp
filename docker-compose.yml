version: '3.8'

services:
  rtsp-server:
    build:
      context: ./services/rtsp-server
      dockerfile: Dockerfile
    ports:
      - "8554:8554"  # RTSP
      - "1935:1935"  # RTMP
      - "8888:8888"  # HLS
      - "9997:9997"  # API
    volumes:
      - rtsp_data:/data
      - ./services/rtsp-server/mediamtx.yml:/etc/mediamtx/mediamtx.yml
    networks:
      - rtap-network
    restart: unless-stopped

  annotation-service:
    build:
      context: ./services/annotation-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/rtap
      - MONGODB_USER=admin
      - MONGODB_PASSWORD=admin_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_password
      - JWT_SECRET=your-secret-key
      - JWT_EXPIRATION=24h
      - CORS_ORIGIN=http://localhost:8080
      - LOG_LEVEL=info
      - WS_HEARTBEAT_INTERVAL=30000
    volumes:
      - ./services/annotation-service/src:/app/src
      - annotation_logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - rtap-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 3s
      retries: 3

  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./services/api-gateway/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./services/api-gateway/ssl:/etc/nginx/ssl
    depends_on:
      - rtsp-server
      - annotation-service
    networks:
      - rtap-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 3s
      retries: 3

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin_password
      - MONGO_INITDB_DATABASE=rtap
    volumes:
      - mongodb_data:/data/db
    networks:
      - rtap-network
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 3s
      retries: 3

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    command: redis-server --requirepass redis_password
    volumes:
      - redis_data:/data
    networks:
      - rtap-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
    networks:
      - rtap-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 3s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./monitoring/grafana:/etc/grafana
      - grafana_data:/var/lib/grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - rtap-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3

networks:
  rtap-network:
    driver: bridge

volumes:
  rtsp_data:
  mongodb_data:
  redis_data:
  prometheus_data:
  grafana_data:
  annotation_logs:
